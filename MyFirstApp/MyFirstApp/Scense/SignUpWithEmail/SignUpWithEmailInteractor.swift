//
//  SignUpWithEmailInteractor.swift
//  MyFirstApp
//
//  Created by Xiaobei Zhu on 2020/12/28.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SignUpWithEmailBusinessLogic {
    // func doSomething(request: SignUpWithEmail.Something.Request)
    func verifyEmailPasswod(request: Verification.VerifyEmailPassword.Request)
}

protocol SignUpWithEmailDataStore {
    // var name: String { get set }
}

class SignUpWithEmailInteractor: SignUpWithEmailBusinessLogic, SignUpWithEmailDataStore {
    

    var presenter: SignUpWithEmailPresentationLogic?
    lazy var worker: SignUpWithEmailWorker? = {
        return SignUpWithEmailWorker()
    }()
    
    // MARK: Interactor Methods

    func verifyEmailPasswod(request: Verification.VerifyEmailPassword.Request) {
        
        if request.isEmailEntering{
            presenter?.presenterEmailPasswordVerify(response: Verification.VerifyEmailPassword.Response.emailHint)
        } else if request.isPasswordEntering{
            let passwordverify = request.password.validatePassword()
            let paswordResponse = Verification.VerifyEmailPassword.Response.passwordHint(result: passwordverify)
            presenter?.presenterEmailPasswordVerify(response: paswordResponse)
        }else if request.password != "" && request.emailAddress != "" {
            let verifyEmail = EmailValidator.validate(input: request.emailAddress)
            let passwordValidator = request.password.validatePassword()
            let firstValue = verifyEmail ? "" : "Email format is invalid"
            let secondValue = passwordValidator.isValid ? "" : passwordValidator.toErrorMessage()
            if verifyEmail && passwordValidator.isValid {
                presenter?.presenterEmailPasswordVerify(response: .good)
            }else{
                presenter?.presenterEmailPasswordVerify(response: .errorMessage(emailMessage: firstValue, passwordMessage: secondValue ?? ""))
            }
            
        }else{
            presenter?.presenterEmailPasswordVerify(response: Verification.VerifyEmailPassword.Response.noMessage)
        }

    }

}
