//
//  SurveyPurposeViewController.swift
//  MyFirstApp
//
//  Created by Xiaobei Zhu on 2021/1/3.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SurveyPurposeDisplayLogic: class {
    func displaySomething(viewModel: SurveyPurpose.Something.ViewModel)
}

class SurveyPurposeViewController: UIViewController, SurveyPurposeDisplayLogic {
    
    // MARK: - Properties
    var interactor: SurveyPurposeBusinessLogic?
    var router: SurveyPurposeRouterInput?
    let travelImage = ["Leisure1.png", "Family1.png", "Work1.png", "School1.png"]
    let travelLabel = ["Leisure", "Family","Work", "School"]
    let selectTravelImage = ["Leisure2.png", "Family2.png", "Work2.png", "School2.png"]
    
    var selectedIndex = [IndexPath]()

    // Mark: - Outlets
    
    @IBOutlet var collectionView: UICollectionView!
    @IBOutlet var saveButton: UIButton!
    //@IBOutlet weak var nameTextField: UITextField!
    
    // MARK: - Object Lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        SurveyPurposeConfigurator.sharedInstance.configure(self)
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
//        doSomething()
    }
    override var preferredStatusBarStyle: UIStatusBarStyle {
        return .lightContent
    }
    
    // MARK: - Do something
    
//    func doSomething() {
//
//    }
//
    func displaySomething(viewModel: SurveyPurpose.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}

extension SurveyPurposeViewController: UICollectionViewDataSource, UICollectionViewDelegate {
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return travelImage.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cellIdentifier = "Cell"
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: cellIdentifier, for: indexPath) as! SurveyPurposeCollectionViewCell
        if selectedIndex.contains(indexPath){
            cell.checkImage.image = UIImage(named: "Selected.png")
            cell.travelImageView.image = UIImage(named:selectTravelImage[indexPath.row])
            cell.backgroundColor = UIColor(named: "Enable ButtonColor")
            cell.poolImage.isHidden = true
        }else{
            cell.checkImage.image = UIImage(named: "Checkbox Style Copy.png")
            cell.travelImageView.image = UIImage(named: travelImage[indexPath.row])
            cell.backgroundColor = UIColor(named: "Background Color")
            cell.poolImage.isHidden = false
        }
        cell.reasonLabel.text = travelLabel[indexPath.row]
            
        return cell
    }
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        changeCollectionState(index: indexPath)
        collectionView.reloadData()
        if selectedIndex.isEmpty{
            saveButton.backgroundColor = UIColor(named: "DisableButton Color")
            saveButton.setTitleColor(UIColor(named: "DisableButtonTextColor"), for: .normal)
            saveButton.isEnabled = false
        }else{
            saveButton.backgroundColor = UIColor(named: "Enable ButtonColor")
            saveButton.setTitleColor(UIColor(named: "White Color"), for: .normal)
            saveButton.isEnabled = true
        }
        
    }
    func changeCollectionState(index: IndexPath){
        
        if selectedIndex.contains(index){
            selectedIndex.remove(at: selectedIndex.firstIndex(of: index)!)
        }else{
            selectedIndex.append(index)
        }
    }
}
